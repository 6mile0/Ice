@model Ice.ViewModels.ErrorViewModel
@{
    ViewData["Title"] = $"エラー {Model.StatusCode}";
    var iconClass = Model.StatusCode switch
    {
        404 => "bi-search",
        403 => "bi-shield-lock",
        500 => "bi-exclamation-triangle",
        _ => "bi-exclamation-circle"
    };
    var colorClass = Model.StatusCode switch
    {
        404 => "primary",
        403 => "warning",
        500 => "danger",
        _ => "secondary"
    };
}

<style>
    .error-container {
        min-height: 70vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }
    .error-card {
        max-width: 600px;
        width: 100%;
        text-align: center;
        animation: fadeInUp 0.6s ease-out;
    }
    .error-icon {
        font-size: 6rem;
        margin-bottom: 1.5rem;
        animation: pulse 2s ease-in-out infinite;
    }
    .error-code {
        font-size: 5rem;
        font-weight: 700;
        line-height: 1;
        margin-bottom: 0.5rem;
        opacity: 0.9;
    }
    .error-title {
        font-size: 1.8rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }
    .error-description {
        font-size: 1.1rem;
        color: #6c757d;
        margin-bottom: 1.5rem;
    }
    .error-suggestion {
        background-color: #f8f9fa;
        border-left: 4px solid var(--bs-@(colorClass));
        padding: 1rem;
        margin: 1.5rem 0;
        text-align: left;
        border-radius: 0.25rem;
    }
    .error-actions {
        margin-top: 2rem;
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: wrap;
    }
    .request-id-box {
        margin-top: 2rem;
        padding: 1rem;
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        font-family: monospace;
        font-size: 0.9rem;
        color: #495057;
    }
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    @@keyframes pulse {
        0%, 100% {
            opacity: 1;
        }
        50% {
            opacity: 0.6;
        }
    }
</style>

<div class="error-container">
    <div class="error-card">
        <div class="error-icon text-@colorClass">
            <i class="bi @iconClass"></i>
        </div>
        <div class="error-code text-@colorClass">@Model.StatusCode</div>
        <h1 class="error-title">@Model.Message</h1>

        @if (!string.IsNullOrEmpty(Model.DetailedMessage))
        {
            <p class="error-description mb-2">@Model.DetailedMessage</p>
        }

        @if (Model.ShowRequestId)
        {
            <div class="request-id-box">
                <small class="text-muted">
                    <i class="bi bi-info-circle me-2"></i>
                    <strong>Request ID:</strong> @Model.RequestId
                </small>
            </div>
        }
    </div>
</div>